---
- name: Trust Proxmox' packaging key
  apt_key:
    data: "{{ lookup('file', pve_release_key) }}"
    id: "{{ pve_release_key_id }}"
    state: present

- name: Remove os-prober package
  apt:
    name: os-prober
    state: absent

- name: Add Proxmox repository
  apt_repository:
    repo: "{{ pve_repository_line }}"
    filename: proxmox
    state: present
  register: _pve_repo

- name: Run apt-get dist-upgrade on repository changes
  apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: dist
  when: _pve_repo is changed
  retries: 2
  register: _dist_upgrade
  until: _dist_upgrade is succeeded

- name: Perform system upgrades
  apt:
    update_cache: yes
    cache_valid_time: 3600
    upgrade: yes
  when: "pve_run_system_upgrades | bool"
  retries: 2
  register: _system_upgrade
  until: _system_upgrade is succeeded

- import_tasks: identify_needed_packages.yml

- name: Install Proxmox VE and related packages
  apt:
    name: "{{ _pve_install_packages }}"
    state: "{{ 'latest' if pve_run_proxmox_upgrades else 'present' }}"
  retries: 2
  register: _proxmox_install
  until: _proxmox_install is succeeded

- block:
  - name: Remove automatically installed PVE Enterprise repo configuration
    apt_repository:
      repo: "{{ item }}"
      filename: pve-enterprise
      state: absent
    with_items:
      - "deb https://enterprise.proxmox.com/debian stretch pve-enterprise"
      - "deb https://enterprise.proxmox.com/debian/pve stretch pve-enterprise"

  - name: Remove subscription check wrapper function in web UI
    patch:
      src: "00_remove_checked_command.patch"
      basedir: /
      strip: 1
      backup: yes
    when:
      - "pve_remove_subscription_warning | bool"

  when:
    - "'pve-no-subscription' in pve_repository_line"

    - name: Initialize a Proxmox cluster
      command: "pvecm create {{ pve_cluster_clustername }} -bindnet0_addr {{ pve_cluster_bindnet0_addr }} \
                -ring0_addr {{ pve_cluster_ring0_addr }}\
                {% if pve_cluster_bindnet1_addr is defined and pve_cluster_ring1_addr is defined %} \
                -bindnet1_addr {{ pve_cluster_bindnet1_addr }} -ring1_addr {{ pve_cluster_ring1_addr }}{% endif %}"
      args:
        creates: "{{ pve_cluster_conf }}"
      when:
        - "_pve_found_clusters is not defined"
        - "inventory_hostname == groups[pve_group][0]"














- name: Configure Proxmox groups
  proxmox_group:
    name: "{{ item.name }}"
    comment: "{{ item.comment | default(omit) }}"
  with_items: "{{ pve_groups }}"
  when: "not pve_cluster_enabled or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

- name: Configure Proxmox user accounts
  proxmox_user:
    name: "{{ item.name }}"
    email: "{{ item.email | default(omit) }}"
    firstname: "{{ item.firstname | default(omit) }}"
    lastname: "{{ item.lastname | default(omit) }}"
    groups: "{{ item.groups | default([]) }}"
  with_items: "{{ pve_users }}"
  when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

- name: Configure Proxmox ACLs
  proxmox_acl:
    path: "{{ item.path }}"
    roles: "{{ item.roles }}"
    groups: "{{ item.groups | default([]) }}"
    users: "{{ item.users | default([]) }}"
  with_items: "{{ pve_acls }}"
  when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

- name: Configure Proxmox Storage
  proxmox_storage:
    name: "{{ item.name }}"
    type: "{{ item.type }}"
    disable: "{{ item.disable | default(False) }}"
    path: "{{ item.path | default(omit) }}"
    content: "{{ item.content | default([]) }}"
    nodes: "{{ item.nodes | default(omit) }}"
    username: "{{ item.username | default(omit) }}"
    pool: "{{ item.pool | default(omit) }}"
    monhost: "{{ item.monhost | default(omit) }}"
    maxfiles: "{{ item.maxfiles | default(omit) }}"
    krbd: "{{ item.krbd | default(omit) }}"
    state: "{{ item.state | default('present') }}"
    server: "{{ item.server | default(omit) }}"
    export: "{{ item.export | default(omit) }}"
    options: "{{ item.options | default(omit) }}"
    vgname: "{{ item.vgname | default(omit) }}"
    thinpool: "{{ item.thinpool | default(omit) }}"
  with_items: "{{ pve_storages }}"
  when: "not pve_cluster_enabled | bool or (pve_cluster_enabled and inventory_hostname == groups[pve_group][0])"

- import_tasks: ssl_config.yml
  when:
    - pve_ssl_private_key is defined
    - pve_ssl_certificate is defined
