---
- name: enabling zfs module
  modprobe:
    name: zfs
    state: present

- name: configuring zfs
  template:
    src: etc/default/zfs.j2
    dest: /etc/default/zfs
    owner: root
    group: root
    mode: 0644
  notify:
    - start zfs-share

- name: checking existing zpool(s)
  shell: "/usr/sbin/zpool list | awk 'FNR >1' | awk '{print $1}'"
  changed_when: false
  register: zpools
  check_mode: no
  when: zfs_pools is defined

- name: gather zpool status
  shell: /usr/sbin/zpool status
  changed_when: false
  register: zpool_devices
  check_mode: no
  when: zfs_pools is defined

- name: manage_zfs | creating mirror/zraid zpool(s)
  command: "zpool create {{ item.options | join (' ') if item.options is defined else '' }} {{ item.name }} {{ item.type }} {{ item.devices|join (' ') }}"
  with_items: "{{ zfs_pools }}"
  register: zpool_created
  when: >
        zfs_pools is defined and
        zfs_create_pools and
        (item.type != "basic" and
        item.name not in zpools.stdout and
        item.state == "present") and
        item.devices[0] not in zpool_devices.stdout and
        item.action|lower == "create"

- name: manage_zfs | adding mirror/zraid zpool(s)
  command: "zpool add {{ item.options | join (' ') if item.options is defined else '' }} {{ item.name }} {{ item.type }} {{ item.devices|join (' ') }}"
  with_items: "{{ zfs_pools }}"
  when: >
        zfs_pools is defined and
        zfs_create_pools and
        (item.type != "basic" and
        item.state == "present") and
        item.devices[0] not in zpool_devices.stdout and
        item.action|lower == "add" and
        (zpool_created.changed or item.name in zpools.stdout)

- name: manage_zfs | managing pools
  zfs:
    name: "{{ item.name }}"
    atime: "{{ item.atime|default(omit) }}"
    compression: "{{ item.compression|default(omit) }}"
    dedup: "{{ item.dedup|default(omit) }}"
    primarycache: "{{ item.primarycache|default(omit) }}"
    quota: "{{ item.quota|default(omit) }}"
    recordsize: "{{ item.recordsize|default(omit) }}"
    sharenfs: "{{ item.sharenfs|default(omit) }}"
    state: "{{ item.state }}"
    sync: "{{ item.sync|default(omit) }}"
  with_items: "{{ zfs_pools }}"
  when: zfs_create_pools

- include: tune_zfs.yml
  when: >
        zfs_enable_performance_tuning is defined and
        zfs_enable_performance_tuning

- include: monitoring.yml
  when: zfs_enable_monitoring
